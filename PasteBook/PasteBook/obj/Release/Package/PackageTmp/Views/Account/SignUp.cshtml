@{ 
    Layout = "~/Views/Shared/_LayoutSignUpLogin.cshtml";
}

@model PasteBookModel.PB_USER

@using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new { @id = "signUpForm"}))
{

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-6" id="signUpContainer">
            <div class="panel panel-default" id="signUpPanel">
                <div class="panel-heading" id="loginPanelHeading">
                    <div class="row" id="signUpTitleDiv">
                        <p id="loginTitle">Sign Up now for free...</p>
                    </div>
                    </div>
                <div class="panel-body" id="signUpPanelBody">
                    <div class="row"><p id="requiredTitle">All * fields are required</p></div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.USER_NAME, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>
                            @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "User name", @id = "txtUserName" } })
                            @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger", @id = "errorMessUsername" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.FIRST_NAME, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>

                            @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "First name", @id = "txtFirstName" } })
                            @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger", @id = "errorMessFirstname" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.LAST_NAME, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>

                            @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "Last name", @id = "txtLastName" } })
                            @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger", @id = "errorMessLastname" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>

                            @Html.EditorFor(model => model.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "Email address", @id = "txtEmailAddress" } })
                            @Html.ValidationMessageFor(model => model.EMAIL_ADDRESS, "", new { @class = "text-danger", @id = "errorMessEmail" })


                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.PASSWORD, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>

                            @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "Password", @id = "txtPassword", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger", @id = "errorMessPassword" })

                        </div>

                        <div class="form-group col-md-6">
                            <label for="confirmPassword" class="control-label" id="confirmPassword">Confirm Password</label><label class="control-label">*</label>
                            <input type="password" class="form-control signUpforms" placeholder="Confirm Password" name="confirmPassword" id="conPassword" />
                            <span id="errorMessConfirmPassword"></span>
                        </div>
                    </div>


                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.COUNTRY_ID, htmlAttributes: new { @class = "control-label" })

                            @Html.DropDownListFor(model => model.COUNTRY_ID, ViewBag.Countries as SelectList, "Select Country", new { @class = "form-control signUpforms", @id = "selectCountry" })


                        </div>
                        <div class="form-group col-md-6">

                            @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(x => x.GENDER, new SelectList(
                               new List<Object>{
                                           new { value = "M" , text = "Male"  },
                                           new { value = "F" , text = "Female" }
                                      },
                               "value",
                               "text",
                               2), "Select Gender", new { @id = "selectGender", @class = "form-control signUpforms" })


                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.BIRTHDATE, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>
                            @Html.EditorFor(model => model.BIRTHDATE, new { htmlAttributes = new { @class = "form-control signUpforms", @type = "date", @max = string.Format("{0:yyyy-MM-dd}", DateTime.Now) } })
                            @Html.ValidationMessageFor(model => model.BIRTHDATE, "", new { @class = "text-danger", @id = "errorMessBirthdate" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.MOBILE_NO, htmlAttributes: new { @class = "control-label" })<label class="control-label">*</label>

                            @Html.EditorFor(model => model.MOBILE_NO, new { htmlAttributes = new { @class = "form-control signUpforms", @placeholder = "Mobile number", @id = "txtMobileNumber" } })
                            @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger", @id = "errorMessMobileNo" })

                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-4"></div>
                        <div class="col-md-4">
                            <input type="submit" value="Sign Up" class="btn btn-submit" id="btnSignUp" />
                        </div>
                        <div class="col-md-4"></div>
                    </div>
                    </div>
                </div>
            </div>
   </div>


}
<script>
    var UrlCheckEmail = '@Url.Action("CheckEmail","PasteBook")'
    var UrlCheckUsername = '@Url.Action("CheckUsername", "PasteBook")'
</script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/PasteBook/SignUpAndLoginScripts.js"> </script>
   


}
