@model IEnumerable<PasteBookModel.PB_POSTS>

@foreach (var item in Model)
{
    <div class="row">
        <div id="contents">
            <div class="row">
                <div class="col-md-2">

                    @{ if (item.PB_USER1.PROFILE_PIC == null)
                        {
                            if (item.PB_USER1.GENDER == "M")
                            {
                                <img src="~/Content/Images/MaleDefaultImage.jpg" class="img-responsive" id="profilePicPost" />
                            }
                            else if (item.PB_USER1.GENDER == "F")
                            {
                                <img src="~/Content/Images/femaleDefaultImage.jpg" class="img-responsive" id="profilePicPost" />
                            }
                            else
                            {
                                <img src="~/Content/Images/femaleDefaultImage.jpg" class="img-responsive" id="profilePicPost" />
                            }
                        }
                        else
                        {
                            <img src="data:image;base64,@System.Convert.ToBase64String(item.PB_USER1.PROFILE_PIC)" id="profilePicPost" />
                        }
                    }
                </div>
                <div class="col-md-10">
                    <div class="row" id="postHeader">
                        @Html.DisplayFor(modelItem => item.PB_USER.FIRST_NAME) &nbsp; @Html.DisplayFor(modelItem => item.PB_USER.LAST_NAME)
                    </div>
                    <div class="row" id="postBody">
                        @Html.DisplayFor(modelItem => item.CONTENT)
                    </div>
                </div>
            </div>
            <div class="row" id="postFooter">
                <div class="col-md-4" id="btnAddLikeDiv">
                    @{
                        var isLiked = false;

                        foreach (var likes in item.PB_LIKES)
                        {

                            if (likes.LIKED_BY == int.Parse(Session["User"].ToString()))
                            {
                                isLiked = true;
                                break;

                            }
                        }

                        if (!isLiked)
                        {
                            <button type="button" class="btn btn-default" id="likeBtn" onclick="AddOrDeleteLike(@(item.ID))">
                                <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>Like
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-default" id="unLikeBtn" onclick="AddOrDeleteLike(@(item.ID))">
                                <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>Like
                            </button>
                        }
                    }
                    <button type="button" class="btn btn-default"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>Comment</button>
                </div>
                <div class="col-md-5"></div>
              @{ var count = item.PB_LIKES.Count;
                  if (count != 0)
                  {

                        <div class="dropdown col-md-3" id="likeDiv">
                            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" id="btnDropdownLike">
                                @(count)
                                @{if (count == 1)
                                    {
                                        <span>Like</span>
                                    }
                                    else
                                    {
                                        <span>Likes</span>
                                    }


                                }
                                <span class="caret"></span>
                            </button>

                        <ul class="dropdown-menu">
                        @{
                            foreach (var likes in item.PB_LIKES)
                            {
                                <li><a href="/Home/Timeline/@(likes.LIKED_BY)">@(likes.PB_USER.FIRST_NAME) @(likes.PB_USER.LAST_NAME)</a></li>
                            }
                        }
                    </ul>
                </div>
                            }
                            }

            </div>
            <div id="commentField_@(item.ID)">
                <div class="row" id="commentHeader">

                </div>
                <div class="row" id="commentBody">
                    <div class="col-md-10" id="txtAreaComment">
                        <textarea id="txtAreaComment_@(item.ID)" class="form-control txtAreaComment" rows="2" placeholder="Comment"></textarea>
                    </div>
                    <div class="col-md-2" id="btnSaveComment">
                    <button type="button" class="btn btn-default" id="button_@(item.ID)" value="@(item.ID)" onclick="AddComment(@(item.ID),@Session["User"],this)">Comments</button>
                        </div>
                </div>

@foreach (var comment in item.PB_COMMENTS)
{
                <div class="row" id="commentList">
                      <div class="commentPicDiv col-md-2">
                                <img src="~/Content/Images/MaleDefaultImage.jpg" id="commentPic" class="img-responsive" />
                            </div>
                            <div class="col-md-9">
                                <div class="row" id="nameComment">
                                  @Html.DisplayFor(modelItem => comment.PB_USER.FIRST_NAME) &nbsp; @Html.DisplayFor(modelItem => comment.PB_USER.LAST_NAME)
                                </div>
                                <div class="row" id ="commentContent">
                                    @Html.DisplayFor(modelItem => comment.CONTENT)
                                </div>
                            </div>
                       </div>
}
            </div>
        </div>
    </div>
    <div class="row">

    </div>
                                }
                            }