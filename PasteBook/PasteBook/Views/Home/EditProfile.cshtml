@model PasteBookModel.PB_USER


<link rel="stylesheet" type="text/css" href="~/Content/HomePage.css">
<div class="container">
    <div class="row">
        <div class="col-md-3 editPills">
            <ul class="nav nav-pills nav-stacked">
                <li class="active"><a href="@Url.Action("EditProfile", "Home")" class="editTabs">Personal Details</a></li>
                <li><a href="@Url.Action("EditPassword", "Home")" class="editTabs">Update Password</a></li>
                <li><a href="@Url.Action("EditEmail", "Home")" class="editTabs">Update Email</a></li>
            </ul>
        </div>
        <div class="col-md-9">
            <div class="tab-content">
                <div id="personalDetailsTab" class="tab-pane fade in active">
@using (Html.BeginForm("EditProfile", "Home", FormMethod.Post))
      {
                    <h3>Personal Details</h3>
                    <hr />
                    <div class="row">
                        <div class="col-md-2"></div>
                        <div class="col-md-8">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.USER_NAME, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "User name", @id = "txtUserName" } })
                                @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger" })
                                <span aria-hidden="true" id="userNameCheckerFail" class="glyphicon glyphicon-align-remove">User name is already taken</span>
                                <span aria-hidden="true" id="userNameCheckerSuccess" class="glyphicon glyphicon-align-ok"> User name is available</span>


                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.FIRST_NAME, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "First name", @id = "txtFirstName" } })
                                @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group row ">
                                @Html.LabelFor(model => model.LAST_NAME, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last name", @id = "txtLastName" } })
                                @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group row">
                                <div class="col-md-6 rowProfile">
                                    @Html.LabelFor(model => model.COUNTRY_ID, htmlAttributes: new { @class = "control-label" })
                                    
                                    @Html.DropDownListFor(model => model.COUNTRY_ID, ViewBag.Countries as SelectList, "Select Country", new { @class = "form-control", @id = "selectCountry" })
                                    @Html.ValidationMessageFor(model => model.PB_REF_COUNTRY.COUNTRY, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 rowProfile1">
                                    @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(x => x.GENDER, new SelectList(
new List<Object>{
                                           new { value = "M" , text = "Male"  },
                                           new { value = "F" , text = "Female" }
},
"value",
"text",
2), "Select Gender", new { @id = "selectGender", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                                </div>
                              </div>
                            <div class="form-group row">
                                <div class="col-md-6 rowProfile">
                                    @Html.LabelFor(model => model.BIRTHDATE, htmlAttributes: new { @class = "control-label", @id = "lblBirthdate" })
                                    @Html.EditorFor(model => model.BIRTHDATE, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "dateBirthdate" } })
                                    @Html.ValidationMessageFor(model => model.BIRTHDATE, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-md-6 rowProfile1">
                                    @Html.LabelFor(model => model.MOBILE_NO, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.MOBILE_NO, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile number", @id = "txtMobileNumber" } })
                                    @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
                                </div>
                                </div>
                            <div class="row">
                                <input type="submit" value="Save" class="btn btn-success btnSaveDetails" id="btnSaveProfileDetails" />
                            </div>
                        </div>
                       
                        <div class="col-md-2">

                        </div>
                    </div>
                    
                
}
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
   
    <script src="~/Scripts/PasteBook/SignUpAndLoginScripts.js"> </script>
<script src="~/Scripts/PasteBook/Home.js" type="text/javascript"></script>
<script src="~/Scripts/PasteBook/NotificationScript.js" type="text/javascript"></script>
<script src="~/Scripts/PasteBook/Profile.js" type="text/javascript"></script>


}